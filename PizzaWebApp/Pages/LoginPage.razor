@page "/login"
@inject NavigationManager NavigationManager
@inject Supabase.Client SupabaseClient
@using Supabase.Gotrue
@using Models

<EditForm Model="loginModel" OnValidSubmit="HandleAuthorization">
    <DataAnnotationsValidator />
<div class="page-container">
    <div class="left-panel">
        <div class="form-container">
            <h1 style="margin-bottom: 20px;">Авторизация</h1>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="error-message">@errorMessage</div>
            }

            <div class="form-group">
                <label>Login</label>
                <input type="text" class="input" placeholder="Введите логин" @bind="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <input type="password" class="input" placeholder="Введите пароль" @bind="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button class="btn-register" @onclick="HandleAuthorization"><strong>Войти</strong></button>
        </div>
    </div>
        <div class="right-panel">
            <img src="images/luigi-logo.png" alt="Luigi's Logo" class="logo" />
            <p class="description">Приложение для сотрудников</p>
            <p class="thanks">Спасибо что вы с нами!</p>
        </div>
</div>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;
    private async Task HandleAuthorization()
    {
        errorMessage = null;

        try
        {
            var session = await SupabaseClient.Auth.SignInWithPassword(loginModel.Email, loginModel.Password);

            if (session.User != null)
            {
                // Перенаправление на главную или нужную страницу
                NavigationManager.NavigateTo("/main-now");
            }
            else
            {
                errorMessage = "Неверный email или пароль.";
            }
        }
        catch (Exception ex)
        {
            var errorJson = ex.Message;

            if (errorJson.Contains("missing email or phone"))
            {

            }
            else if (errorJson.Contains("Invalid login credentials") || errorJson.Contains("Invalid email or password"))
            {
                errorMessage = "Неверный email или пароль.";
            }
            else
            {
                // Для логов или отладки
                Console.WriteLine("Auth error: " + ex.Message);
                errorMessage = "Произошла ошибка авторизации. Попробуйте позже.";
            }
        }
}
}